{
    "name": "acelaya/mywebsite-expressive",
    "description": "My personal website built on top of Zend Expressive",
    "type": "Project",
    "license": "MIT",
    "keywords": [
        "zend",
        "expressive",
        "microframework",
        "middleware",
        "psr-7",
        "website",
        "acelaya"
    ],
    "authors": [
        {
            "name": "Alejandro Celaya",
            "email": "alejandro@alejandrocelaya.com"
        }
    ],
    "autoload": {
        "psr-4": {
            "Acelaya\\Website\\": "src"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "AcelayaTest\\Website\\": "tests"
        }
    },
    "require": {
        "php": "^7.1",
        "acelaya/expressive-slim-router": "^3.0",
        "acelaya/zsm-annotated-services": "^1.0",
        "doctrine/cache": "^1.4",
        "google/recaptcha": "^1.1",
        "swiftmailer/swiftmailer": "^5.4",
        "zendframework/zend-config": "^3.0",
        "zendframework/zend-expressive": "^2.0",
        "zendframework/zend-expressive-platesrenderer": "^1.3",
        "zendframework/zend-expressive-helpers": "^4.1",
        "zendframework/zend-i18n": "^2.6",
        "zendframework/zend-inputfilter": "^2.6",
        "zendframework/zend-servicemanager": "^3.3",
        "zendframework/zend-session": "^2.6",
        "zendframework/zend-feed": "^2.7",
        "symfony/console": "^3.1",
        "guzzlehttp/guzzle": "^6.2",
        "predis/predis": "^1.1",
        "roave/security-advisories": "dev-master"
    },
    "require-dev": {
        "filp/whoops": "^2.0",
        "phpunit/phpunit": "^6.0",
        "squizlabs/php_codesniffer": "^3.1",
        "symfony/var-dumper": "^2.7",
        "vlucas/phpdotenv": "^2.0",
        "zendframework/zend-expressive-tooling": "^0.4",
        "slevomat/coding-standard": "^4.0"
    },
    "scripts": {
        "check": [
            "@cs",
            "@test"
        ],
        "cs": "phpcs",
        "cs-fix": "phpcbf",
        "serve": "php -S 0.0.0.0:8000 -t public/",
        "test": "phpunit --coverage-clover build/clover.xml --colors=always",
        "pretty-test": "phpunit -c tests/phpunit.xml --coverage-html build/coverage"
    }
}
